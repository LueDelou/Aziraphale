//---------------------------Surfaces.txt--------------------------
//Blegh alright here we go. Surfaces.txt is the backbone of the shell you make for your ghost. Making the images isn't enough, a ghost needs something to tell it where those images go and how to display them, and that's where surfaces.txt comes in.

//Images are brought together into a thing I generally refer to as a pose, but what is defined in the shell and this text file as a Surface. Each Surface can contain any number of images in it doing any number of things. These Surfaces are what is being called when you use the \s[] tag when writing dialogue. For example, you could create a pose with three images under Surface5, and then in dialogue, you would call that pose made of three images with \s[5]. That's the basic jist of how this file works.
//I wrote up some pages about making images and surfaces.txt on the walkthrough (http://www.ashido.com/ukagaka/) so I highly recommend you read those as well.

//I will reiterate that you should be editing these in Notepad++, and in particular, you should set the Language to C (or Java I guess) to properly highlight all the text. It will make things A LOT EASIER for you, trust me! It will also help you keep track of your brackets in case you forget some. If you click on a line with a bracket in Notepad++, it should highlight where the other bracket ends, or turn purple if there's no finishing bracket (which you should definitely fix!)
//It will also highlight my commented lines in green, so you'll know where they are. Any line beginning with // is a commented line that the code will not read. It's just for your reference!

//There are a lot of crazy tricks you can do with surfaces.txt if you're creative and determined, but you won't have to worry about any of them (although I will include some commented out examples for my own reference). The easiest, easiest way to do this file is simply to replace the images I've already made. There should be around 10 poses for each character defined in surfaces.txt. They break down like this.

//0 - Girl's default pose. This is made up of a few images.
	//surface0.png, her full default frame with her eyes and mouth in place to layer stuff on.
	//surface1001.png, her half-closed eyes
	//surface1002.png, her closed eyes. These two frames are used to make her blinking animation.
	//surface1101.png, her half-open mouth
	//surface1102.png, her open mouth. These two frames are used for her talking animation.
//1 - Girl's embarrassed pose.
	//From here on, each pose is a single still image. This is surface1501.png
//2 - Girl's surprised pose.
	//surface1502.png
//3 - Girl's worried pose.
	//surface1503.png
//4 - Girl's sad/disappointed pose.
	//surface1504.png
//5 - Girl's smiling pose.
	//surface1505.png
//6 - Girl's contented pose.
	//surface1506.png
//7 - Girl's angry pose.
	//surface1507.png
//8 - Girl's thoughtful pose.
	//surface1508.png
//9 - Girl's bored pose.
	//surface1509.png
//10 - Triangle's default pose. Like Girl, this pose is broken up into multiple pieces because it has an animation.
	//surface10.png, his default base frame to layer stuff on.
	//surface2001.png, his half-closed eyes.
	//surface2002.png, his closed eyes. These are for his blinking animation.
//11 - Triangle's embarrassed pose. Like above, these are single still frames.
	//surface2501.png 
//12 - Triangle's surprised pose.
	//surface2502.png
//13 - Triangle's worried pose.
	//surface2503.png
//14 - Triangle's sad/disappointed pose.
	//surface2504.png
//15 - Triangle's smiling pose.
	//surface2505.png
//16 - Triangle's contented pose.
	//surface2506.png
//17 - Triangle's angry pose.
	//surface2507.png
//18 - Triangle's thoughtful pose.
	//surface2508.png
//19 - Triangle's bored pose.
	//surface2509.png

//If you look at the image files themselves, you'll see that all the images for Girl are in the 1000 range, and the images for Triangle are in the 2000. ALL YOU NEED TO DO is draw your character with whatever expression you want and save it over the appropriate file. That way, you won't have to adjust any of the coding in surfaces.txt itself, you'll just be replacing the images. You should read through this file anyway though to get an idea of how it works.

//However, there is one snag here! Girl's default pose has blinking eyes and a moving mouth, and for that, you'll need to study the files for that pose very carefully. Note that the different eye frames and mouth frames are separate files and only have the eyes and the mouths in them. You'll have to do the same. All you have to do is select around your eyes, inverse, delete everything, and save it for each eye frame, and likewise for the mouth frames. I talk about this in a bit more detail in the making images section of the walkthrough page. Hopefully it won't be too hard. If worse comes to worse and you just can't get it to work, you can delete the blinking and talking sequences from surface0 if you have to.
//(Basically, what surfaces.txt does is overlay the mouth or eye frames on top of your base image to make the animation. That's why all you want in that overlaid frame is the eyes or the mouth.)
//Likewise, if you want to add blinking eyes and a moving mouth to your other poses, you'll have to do the same thing as with the default pose - make individual frames for the eyes and mouth, copy and paste the code for the blinking/mouth sections in surface0 to the other surface you want to add them to, and replace the file numbers where appropriate.

//You can change the size of the images if you want to draw a much bigger character than I did! If you do that though, MAKE SURE ALL YOUR IMAGES FOR THAT CHARACTER ARE THE SAME SIZE. So if Girl's image dimensions are 400x400, and you draw a Main Character that's 800x800, MAKE SURE ALL the images for your main character are also 800x800! This applies to the side character too, ALL the images for your side character should be the same dimensions! If your side character is 250x250, all side character images should be 250x250!
//The main character and the side character DON'T have to be the same size though, so you can have a tiny sidekick and a huge dude if you want, like... I dunno, Gillian Seed and Metal Gear Mk. II for example, or Torin and Boggle. The image dimensions just need to be consistent throughout for each character, because believe me, it will make things MUCH, MUCH easier for you from this point on if you do that.

//SAVE ALL IMAGES FOR YOUR MAIN CHARACTER IN THE 1000-1999 RANGE, AND SAVE ALL IMAGES FOR YOUR SECOND CHARACTER IN THE 2000-2999 RANGE. I get into why on the walkthrough page, but just trust me, it will save you a headache in the long run. I'm looking at you, self reading this in the future. 

//ONE MORE NOTE - If you are planning on doing a single person ghost without a sidekick character at all, all you have to do is save a blank png over all the files for the secondary character, ESPECIALLY Surface10.png. Then just don't write any dialogue for the secondary character in the .dic files. Problem solved. Don't delete Surface10.png though.
//More advanced users can even rewrite the poses in this file originally intended for the secondary character, 11-19, for their main character instead if you need to and save main character poses over the second character ones, AS LONG AS Surface10.png is blank.


//Alright, now let's get into the coding.



//--The Main Character's Poses---------------------------------------------------------

surface0
//surface0 is the basic default pose for your main character. I'll include a few examples of things you can do in this pose, but you won't have to use any of them if you don't want to. They're mostly for (my) reference and advanced users for the most part.
{
collision0,118,48,227,100,Head

0interval,random,4
0pattern0,-1,10,overlay,0,0
0pattern1,1002,5,overlayfast,0,0
0pattern2,1001,10,overlayfast,0,0
0pattern3,-1,3,overlay,0,0

1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,1102,10,overlay,0,0
2pattern1,1101,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,1101,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,1102,14,overlay,0,0
4pattern1,-1,10,overlay,0,0

//These three intervals handle the talk frames. For those who are doing their own thing or adding talk frames to their other Surfaces, all you need to do is copy and paste the talk blocks (1interval to 4interval) into the Surface you want and replace 1101 and 1102 with the appropriate file numbers for your new talk frames. You can also add more frames to your talking animation if you want. Those just replacing my images don't have to worry about any of this, as long as your mouth frames look like mine.
//IMPORTANT NOTE: IF YOU'RE DOING A PROFILE VIEW AND YOUR MOUTH IS MOVING OUTSIDE THE BODY then you're going to need to use Replace instead. I'm sorry for your loss. I'll get into Replace later. Your other option is to change your pose or move your mouth or do something to make sure your mouth's movement does not break your character's silhouette. If any furries are reading this, you will probably run into this problem a lot with any kind of side-view of a muzzle.

//IF YOU ABSOLUTELY CAN'T GET THE BLINKING/TALKING FRAMES TO LOOK RIGHT
//If it comes to that, you can delete those chunks of code and just leave surface0 like the other simple poses below. It'd look something like

//surface0
//{
//collision0,57,22,112,46,Head
//collision1,65,50,105,91,Face

//element0,overlay,surface0.png,0,0
//}

//And that's it. You can do this with Triangle below too, if you just can't get it to work. If you do do this, make sure to delete the blinking/talking .png files as well to clear up any error messages that may come up as a result of them not being used.
}

//Now we can move on to the easy part! For ease of use, this template is set up to use stationary images for poses instead of animated ones like surface0 above. Because the other surfaces won't have blinking eyes or moving mouths or anything like that, all you have to do is put in the right file number and they'll be done. And if you're just replacing my images, you probably won't have to do anything!
//This isn't to say you can't ADD blinking and talking frames to these surfaces if you want to. It's easy! All you have to do is copy the right code chunks from surface0 and paste them in here, then replace the file numbers as you need. And you'd have to draw the frames of course. And of course, you can massively expand these as well, depending on what you plan on doing.

//tl;dr - Put in the correct file number for each of the following poses, or leave them alone if you saved your images over mine.

//Main Character Embarrassed pose


//--The Side Character's poses------------------
//I actually intended to do the same thing here with Triangle's default pose as I did with Girl, but then I remembered that he has no mouth, so he can't even use talking frames, haha. He can however use blinking frames! So I'm going to copy the same blinking chunk from surface0 and put it here.

surface10
{
collision0,58,199,85,218,Face
collision1,96,128,140,162,Point

//Here are Triangle's collisions. Because they are within Surface10, they only apply when he is in this pose. As mentioned above in surface0, you can set unique collisions for any Surface you like, or you can use surface.append at the end of this file to apply the same collisions to a wide range of surfaces.

element0,overlay,surface10.png,0,0
//Here is Triangle's base frame.

//Blinking
0interval,random,4
0pattern0,-1,10,overlay,0,0
0pattern1,2002,5,overlayfast,0,0
0pattern2,2001,10,overlayfast,0,0
0pattern3,-1,3,overlay,0,0

//Then all I did was change the file numbers to the right numbers for Triangle's blink. Done!
//If your second character has a mouth though and wants to use the talking frames, you'd want to borrow the code from surface0 for it. I'll put it here just to make it a bit easier to find, but I'll comment it out. If you're going to use it, erase the slashes // to uncomment it and put in the right file numbers for your mouth frames instead of 1102 and 1101. Done!


//1interval,talk,4
//1pattern0,0,0,alternativestart,[2.3.4]

//2interval,never
//2pattern0,1102,10,overlay,0,0
//2pattern0,1101,13,overlay,0,0
//2pattern1,-1,10,overlay,0,0

//3interval,never
//3pattern0,1101,14,overlay,0,0
//3pattern1,-1,10,overlay,0,0

//4interval,never
//4pattern0,1102,14,overlay,0,0
//4pattern1,-1,10,overlay,0,0
}

surface1501
{
collision0,121,51,214,95,Head

1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,1103,10,overlay,0,0
2pattern1,1104,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,1103,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,1104,14,overlay,0,0
4pattern1,-1,10,overlay,0,0

}

surface1504
{
collision0,118,48,227,100,Head

0interval,random,4
0pattern0,-1,10,overlay,0,0
0pattern1,1002,5,overlayfast,0,0
0pattern2,1001,10,overlayfast,0,0
0pattern3,-1,3,overlay,0,0

1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,1102,10,overlay,0,0
2pattern1,1101,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,1101,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,1102,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface1530
{
collision0,129,51,214,90,Head
}

surface1531
{
collision0,129,51,214,90,Head

1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,1105,10,overlay,0,0
2pattern1,1107,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,1105,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,1107,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface1532
{
collision0,129,51,214,90,Head

1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,1105,10,overlay,0,0
2pattern1,1106,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,1105,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,1106,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}


surface1533
{
collision0,118,48,227,100,Head

1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,1102,10,overlay,0,0
2pattern1,1101,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,1101,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,1102,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}


//messages from the dev

//straight eyes

surface66601
{


0interval,random,4
0pattern0,-1,10,overlay,0,0
0pattern1,66650,5,overlay,0,0
0pattern2,66652,10,overlay,0,0
0pattern3,-1,3,overlay,0,0

1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66602
{


0interval,random,4
0pattern0,-1,10,overlay,0,0
0pattern1,66650,5,overlay,0,0
0pattern2,66652,10,overlay,0,0
0pattern3,-1,3,overlay,0,0

1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66603
{


0interval,random,4
0pattern0,-1,10,overlay,0,0
0pattern1,66650,5,overlay,0,0
0pattern2,66652,10,overlay,0,0
0pattern3,-1,3,overlay,0,0

1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66604
{


0interval,random,4
0pattern0,-1,10,overlay,0,0
0pattern1,66650,5,overlay,0,0
0pattern2,66652,10,overlay,0,0
0pattern3,-1,3,overlay,0,0

1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}



surface66613
{


0interval,random,4
0pattern0,-1,10,overlay,0,0
0pattern1,66650,5,overlay,0,0
0pattern2,66652,10,overlay,0,0
0pattern3,-1,3,overlay,0,0

1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66614
{


0interval,random,4
0pattern0,-1,10,overlay,0,0
0pattern1,66650,5,overlay,0,0
0pattern2,66652,10,overlay,0,0
0pattern3,-1,3,overlay,0,0

1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66615
{


0interval,random,4
0pattern0,-1,10,overlay,0,0
0pattern1,66650,5,overlay,0,0
0pattern2,66652,10,overlay,0,0
0pattern3,-1,3,overlay,0,0

1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66616
{


0interval,random,4
0pattern0,-1,10,overlay,0,0
0pattern1,66650,5,overlay,0,0
0pattern2,66652,10,overlay,0,0
0pattern3,-1,3,overlay,0,0

1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

//side eyes

surface66617
{


0interval,random,4
0pattern0,-1,10,overlay,0,0
0pattern1,66651,5,overlay,0,0
0pattern2,66652,10,overlay,0,0
0pattern3,-1,3,overlay,0,0

1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66618
{


0interval,random,4
0pattern0,-1,10,overlay,0,0
0pattern1,66651,5,overlay,0,0
0pattern2,66652,10,overlay,0,0
0pattern3,-1,3,overlay,0,0

1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66619
{


0interval,random,4
0pattern0,-1,10,overlay,0,0
0pattern1,66651,5,overlay,0,0
0pattern2,66652,10,overlay,0,0
0pattern3,-1,3,overlay,0,0

1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66620
{

0interval,random,4
0pattern0,-1,10,overlay,0,0
0pattern1,66651,5,overlay,0,0
0pattern2,66652,10,overlay,0,0
0pattern3,-1,3,overlay,0,0

1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66629
{

0interval,random,4
0pattern0,-1,10,overlay,0,0
0pattern1,66651,5,overlay,0,0
0pattern2,66652,10,overlay,0,0
0pattern3,-1,3,overlay,0,0

1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66630
{

0interval,random,4
0pattern0,-1,10,overlay,0,0
0pattern1,66651,5,overlay,0,0
0pattern2,66652,10,overlay,0,0
0pattern3,-1,3,overlay,0,0

1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66631
{

0interval,random,4
0pattern0,-1,10,overlay,0,0
0pattern1,66651,5,overlay,0,0
0pattern2,66652,10,overlay,0,0
0pattern3,-1,3,overlay,0,0

1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66632
{

0interval,random,4
0pattern0,-1,10,overlay,0,0
0pattern1,66651,5,overlay,0,0
0pattern2,66652,10,overlay,0,0
0pattern3,-1,3,overlay,0,0

1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

//closed eyes

surface66660
{
1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66661
{
1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66662
{
1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66663
{
1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66672
{
1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66673
{
1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66674
{
1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66675
{
1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66676
{
1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66677
{
1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66678
{
1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66679
{
1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66684
{
1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66685
{
1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66686
{
1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}

surface66687
{
1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

2interval,never
2pattern0,66640,10,overlay,0,0
2pattern1,66641,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,66640,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,66641,14,overlay,0,0
4pattern1,-1,10,overlay,0,0
}


















